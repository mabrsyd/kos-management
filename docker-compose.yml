version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: kos-frontend
    ports:
      - "3000:80"
      - "3443:443"
    depends_on:
      - backend
    networks:
      kos-network:
        aliases:
          - frontend
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: kos-backend
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=KosM@n@gement2025!
      - DB_NAME=kosmanagement
      - DB_SSLMODE=disable
      - GIN_MODE=release
      - ALLOWED_ORIGINS=https://kos-management.com,https://localhost:3443
    networks:
      kos-network:
        aliases:
          - backend
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: kos-database
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=KosM@n@gement2025!
      - POSTGRES_DB=kosmanagement
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      kos-network:
        aliases:
          - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  kos-network:
    name: kos-network
    driver: bridge

volumes:
  postgres_data:
    driver: local
